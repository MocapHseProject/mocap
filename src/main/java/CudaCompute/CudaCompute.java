// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cuda_compute.proto
// Protobuf Java Version: 4.26.1

package main.java.CudaCompute;

public final class CudaCompute {
  private CudaCompute() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      CudaCompute.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CudaComputeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cuda_compute.CudaComputeRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @return A list containing the textureData.
     */
    java.util.List<java.lang.Integer> getTextureDataList();
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @return The count of textureData.
     */
    int getTextureDataCount();
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @param index The index of the element to return.
     * @return The textureData at the given index.
     */
    int getTextureData(int index);

    /**
     * <code>repeated uint32 data = 2;</code>
     * @return A list containing the data.
     */
    java.util.List<java.lang.Integer> getDataList();
    /**
     * <code>repeated uint32 data = 2;</code>
     * @return The count of data.
     */
    int getDataCount();
    /**
     * <code>repeated uint32 data = 2;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    int getData(int index);
  }
  /**
   * Protobuf type {@code cuda_compute.CudaComputeRequest}
   */
  public static final class CudaComputeRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cuda_compute.CudaComputeRequest)
      CudaComputeRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        CudaComputeRequest.class.getName());
    }
    // Use CudaComputeRequest.newBuilder() to construct.
    private CudaComputeRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CudaComputeRequest() {
      textureData_ = emptyIntList();
      data_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              main.java.CudaCompute.CudaCompute.CudaComputeRequest.class, main.java.CudaCompute.CudaCompute.CudaComputeRequest.Builder.class);
    }

    public static final int TEXTURE_DATA_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList textureData_ =
        emptyIntList();
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @return A list containing the textureData.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getTextureDataList() {
      return textureData_;
    }
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @return The count of textureData.
     */
    public int getTextureDataCount() {
      return textureData_.size();
    }
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @param index The index of the element to return.
     * @return The textureData at the given index.
     */
    public int getTextureData(int index) {
      return textureData_.getInt(index);
    }
    private int textureDataMemoizedSerializedSize = -1;

    public static final int DATA_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList data_ =
        emptyIntList();
    /**
     * <code>repeated uint32 data = 2;</code>
     * @return A list containing the data.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated uint32 data = 2;</code>
     * @return The count of data.
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated uint32 data = 2;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    public int getData(int index) {
      return data_.getInt(index);
    }
    private int dataMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getTextureDataList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(textureDataMemoizedSerializedSize);
      }
      for (int i = 0; i < textureData_.size(); i++) {
        output.writeUInt32NoTag(textureData_.getInt(i));
      }
      if (getDataList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(dataMemoizedSerializedSize);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeUInt32NoTag(data_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < textureData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(textureData_.getInt(i));
        }
        size += dataSize;
        if (!getTextureDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        textureDataMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < data_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(data_.getInt(i));
        }
        size += dataSize;
        if (!getDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dataMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof main.java.CudaCompute.CudaCompute.CudaComputeRequest)) {
        return super.equals(obj);
      }
      main.java.CudaCompute.CudaCompute.CudaComputeRequest other = (main.java.CudaCompute.CudaCompute.CudaComputeRequest) obj;

      if (!getTextureDataList()
          .equals(other.getTextureDataList())) return false;
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTextureDataCount() > 0) {
        hash = (37 * hash) + TEXTURE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTextureDataList().hashCode();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(main.java.CudaCompute.CudaCompute.CudaComputeRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cuda_compute.CudaComputeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cuda_compute.CudaComputeRequest)
        main.java.CudaCompute.CudaCompute.CudaComputeRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                main.java.CudaCompute.CudaCompute.CudaComputeRequest.class, main.java.CudaCompute.CudaCompute.CudaComputeRequest.Builder.class);
      }

      // Construct using main.java.CudaCompute.CudaCompute.CudaComputeRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        textureData_ = emptyIntList();
        data_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeRequest_descriptor;
      }

      @java.lang.Override
      public main.java.CudaCompute.CudaCompute.CudaComputeRequest getDefaultInstanceForType() {
        return main.java.CudaCompute.CudaCompute.CudaComputeRequest.getDefaultInstance();
      }

      @java.lang.Override
      public main.java.CudaCompute.CudaCompute.CudaComputeRequest build() {
        main.java.CudaCompute.CudaCompute.CudaComputeRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public main.java.CudaCompute.CudaCompute.CudaComputeRequest buildPartial() {
        main.java.CudaCompute.CudaCompute.CudaComputeRequest result = new main.java.CudaCompute.CudaCompute.CudaComputeRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(main.java.CudaCompute.CudaCompute.CudaComputeRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          textureData_.makeImmutable();
          result.textureData_ = textureData_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          data_.makeImmutable();
          result.data_ = data_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof main.java.CudaCompute.CudaCompute.CudaComputeRequest) {
          return mergeFrom((main.java.CudaCompute.CudaCompute.CudaComputeRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(main.java.CudaCompute.CudaCompute.CudaComputeRequest other) {
        if (other == main.java.CudaCompute.CudaCompute.CudaComputeRequest.getDefaultInstance()) return this;
        if (!other.textureData_.isEmpty()) {
          if (textureData_.isEmpty()) {
            textureData_ = other.textureData_;
            textureData_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureTextureDataIsMutable();
            textureData_.addAll(other.textureData_);
          }
          onChanged();
        }
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            data_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readUInt32();
                ensureTextureDataIsMutable();
                textureData_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureTextureDataIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  textureData_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                int v = input.readUInt32();
                ensureDataIsMutable();
                data_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureDataIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  data_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList textureData_ = emptyIntList();
      private void ensureTextureDataIsMutable() {
        if (!textureData_.isModifiable()) {
          textureData_ = makeMutableCopy(textureData_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @return A list containing the textureData.
       */
      public java.util.List<java.lang.Integer>
          getTextureDataList() {
        textureData_.makeImmutable();
        return textureData_;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @return The count of textureData.
       */
      public int getTextureDataCount() {
        return textureData_.size();
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @param index The index of the element to return.
       * @return The textureData at the given index.
       */
      public int getTextureData(int index) {
        return textureData_.getInt(index);
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @param index The index to set the value at.
       * @param value The textureData to set.
       * @return This builder for chaining.
       */
      public Builder setTextureData(
          int index, int value) {

        ensureTextureDataIsMutable();
        textureData_.setInt(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @param value The textureData to add.
       * @return This builder for chaining.
       */
      public Builder addTextureData(int value) {

        ensureTextureDataIsMutable();
        textureData_.addInt(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @param values The textureData to add.
       * @return This builder for chaining.
       */
      public Builder addAllTextureData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTextureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, textureData_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTextureData() {
        textureData_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList data_ = emptyIntList();
      private void ensureDataIsMutable() {
        if (!data_.isModifiable()) {
          data_ = makeMutableCopy(data_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @return A list containing the data.
       */
      public java.util.List<java.lang.Integer>
          getDataList() {
        data_.makeImmutable();
        return data_;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @return The count of data.
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @param index The index of the element to return.
       * @return The data at the given index.
       */
      public int getData(int index) {
        return data_.getInt(index);
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @param index The index to set the value at.
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(
          int index, int value) {

        ensureDataIsMutable();
        data_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @param value The data to add.
       * @return This builder for chaining.
       */
      public Builder addData(int value) {

        ensureDataIsMutable();
        data_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @param values The data to add.
       * @return This builder for chaining.
       */
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        data_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cuda_compute.CudaComputeRequest)
    }

    // @@protoc_insertion_point(class_scope:cuda_compute.CudaComputeRequest)
    private static final main.java.CudaCompute.CudaCompute.CudaComputeRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new main.java.CudaCompute.CudaCompute.CudaComputeRequest();
    }

    public static main.java.CudaCompute.CudaCompute.CudaComputeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CudaComputeRequest>
        PARSER = new com.google.protobuf.AbstractParser<CudaComputeRequest>() {
      @java.lang.Override
      public CudaComputeRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CudaComputeRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CudaComputeRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public main.java.CudaCompute.CudaCompute.CudaComputeRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CudaComputeResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cuda_compute.CudaComputeResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @return A list containing the textureData.
     */
    java.util.List<java.lang.Integer> getTextureDataList();
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @return The count of textureData.
     */
    int getTextureDataCount();
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @param index The index of the element to return.
     * @return The textureData at the given index.
     */
    int getTextureData(int index);

    /**
     * <code>repeated uint32 data = 2;</code>
     * @return A list containing the data.
     */
    java.util.List<java.lang.Integer> getDataList();
    /**
     * <code>repeated uint32 data = 2;</code>
     * @return The count of data.
     */
    int getDataCount();
    /**
     * <code>repeated uint32 data = 2;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    int getData(int index);
  }
  /**
   * Protobuf type {@code cuda_compute.CudaComputeResponse}
   */
  public static final class CudaComputeResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:cuda_compute.CudaComputeResponse)
      CudaComputeResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        CudaComputeResponse.class.getName());
    }
    // Use CudaComputeResponse.newBuilder() to construct.
    private CudaComputeResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CudaComputeResponse() {
      textureData_ = emptyIntList();
      data_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              main.java.CudaCompute.CudaCompute.CudaComputeResponse.class, main.java.CudaCompute.CudaCompute.CudaComputeResponse.Builder.class);
    }

    public static final int TEXTURE_DATA_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList textureData_ =
        emptyIntList();
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @return A list containing the textureData.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getTextureDataList() {
      return textureData_;
    }
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @return The count of textureData.
     */
    public int getTextureDataCount() {
      return textureData_.size();
    }
    /**
     * <code>repeated uint32 texture_data = 1;</code>
     * @param index The index of the element to return.
     * @return The textureData at the given index.
     */
    public int getTextureData(int index) {
      return textureData_.getInt(index);
    }
    private int textureDataMemoizedSerializedSize = -1;

    public static final int DATA_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList data_ =
        emptyIntList();
    /**
     * <code>repeated uint32 data = 2;</code>
     * @return A list containing the data.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDataList() {
      return data_;
    }
    /**
     * <code>repeated uint32 data = 2;</code>
     * @return The count of data.
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated uint32 data = 2;</code>
     * @param index The index of the element to return.
     * @return The data at the given index.
     */
    public int getData(int index) {
      return data_.getInt(index);
    }
    private int dataMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getTextureDataList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(textureDataMemoizedSerializedSize);
      }
      for (int i = 0; i < textureData_.size(); i++) {
        output.writeUInt32NoTag(textureData_.getInt(i));
      }
      if (getDataList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(dataMemoizedSerializedSize);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeUInt32NoTag(data_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < textureData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(textureData_.getInt(i));
        }
        size += dataSize;
        if (!getTextureDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        textureDataMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < data_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(data_.getInt(i));
        }
        size += dataSize;
        if (!getDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dataMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof main.java.CudaCompute.CudaCompute.CudaComputeResponse)) {
        return super.equals(obj);
      }
      main.java.CudaCompute.CudaCompute.CudaComputeResponse other = (main.java.CudaCompute.CudaCompute.CudaComputeResponse) obj;

      if (!getTextureDataList()
          .equals(other.getTextureDataList())) return false;
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTextureDataCount() > 0) {
        hash = (37 * hash) + TEXTURE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getTextureDataList().hashCode();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(main.java.CudaCompute.CudaCompute.CudaComputeResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code cuda_compute.CudaComputeResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cuda_compute.CudaComputeResponse)
        main.java.CudaCompute.CudaCompute.CudaComputeResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                main.java.CudaCompute.CudaCompute.CudaComputeResponse.class, main.java.CudaCompute.CudaCompute.CudaComputeResponse.Builder.class);
      }

      // Construct using main.java.CudaCompute.CudaCompute.CudaComputeResponse.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        textureData_ = emptyIntList();
        data_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return main.java.CudaCompute.CudaCompute.internal_static_cuda_compute_CudaComputeResponse_descriptor;
      }

      @java.lang.Override
      public main.java.CudaCompute.CudaCompute.CudaComputeResponse getDefaultInstanceForType() {
        return main.java.CudaCompute.CudaCompute.CudaComputeResponse.getDefaultInstance();
      }

      @java.lang.Override
      public main.java.CudaCompute.CudaCompute.CudaComputeResponse build() {
        main.java.CudaCompute.CudaCompute.CudaComputeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public main.java.CudaCompute.CudaCompute.CudaComputeResponse buildPartial() {
        main.java.CudaCompute.CudaCompute.CudaComputeResponse result = new main.java.CudaCompute.CudaCompute.CudaComputeResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(main.java.CudaCompute.CudaCompute.CudaComputeResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          textureData_.makeImmutable();
          result.textureData_ = textureData_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          data_.makeImmutable();
          result.data_ = data_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof main.java.CudaCompute.CudaCompute.CudaComputeResponse) {
          return mergeFrom((main.java.CudaCompute.CudaCompute.CudaComputeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(main.java.CudaCompute.CudaCompute.CudaComputeResponse other) {
        if (other == main.java.CudaCompute.CudaCompute.CudaComputeResponse.getDefaultInstance()) return this;
        if (!other.textureData_.isEmpty()) {
          if (textureData_.isEmpty()) {
            textureData_ = other.textureData_;
            textureData_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureTextureDataIsMutable();
            textureData_.addAll(other.textureData_);
          }
          onChanged();
        }
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            data_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readUInt32();
                ensureTextureDataIsMutable();
                textureData_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureTextureDataIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  textureData_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                int v = input.readUInt32();
                ensureDataIsMutable();
                data_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureDataIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  data_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList textureData_ = emptyIntList();
      private void ensureTextureDataIsMutable() {
        if (!textureData_.isModifiable()) {
          textureData_ = makeMutableCopy(textureData_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @return A list containing the textureData.
       */
      public java.util.List<java.lang.Integer>
          getTextureDataList() {
        textureData_.makeImmutable();
        return textureData_;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @return The count of textureData.
       */
      public int getTextureDataCount() {
        return textureData_.size();
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @param index The index of the element to return.
       * @return The textureData at the given index.
       */
      public int getTextureData(int index) {
        return textureData_.getInt(index);
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @param index The index to set the value at.
       * @param value The textureData to set.
       * @return This builder for chaining.
       */
      public Builder setTextureData(
          int index, int value) {

        ensureTextureDataIsMutable();
        textureData_.setInt(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @param value The textureData to add.
       * @return This builder for chaining.
       */
      public Builder addTextureData(int value) {

        ensureTextureDataIsMutable();
        textureData_.addInt(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @param values The textureData to add.
       * @return This builder for chaining.
       */
      public Builder addAllTextureData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTextureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, textureData_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 texture_data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTextureData() {
        textureData_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList data_ = emptyIntList();
      private void ensureDataIsMutable() {
        if (!data_.isModifiable()) {
          data_ = makeMutableCopy(data_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @return A list containing the data.
       */
      public java.util.List<java.lang.Integer>
          getDataList() {
        data_.makeImmutable();
        return data_;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @return The count of data.
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @param index The index of the element to return.
       * @return The data at the given index.
       */
      public int getData(int index) {
        return data_.getInt(index);
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @param index The index to set the value at.
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(
          int index, int value) {

        ensureDataIsMutable();
        data_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @param value The data to add.
       * @return This builder for chaining.
       */
      public Builder addData(int value) {

        ensureDataIsMutable();
        data_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @param values The data to add.
       * @return This builder for chaining.
       */
      public Builder addAllData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        data_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:cuda_compute.CudaComputeResponse)
    }

    // @@protoc_insertion_point(class_scope:cuda_compute.CudaComputeResponse)
    private static final main.java.CudaCompute.CudaCompute.CudaComputeResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new main.java.CudaCompute.CudaCompute.CudaComputeResponse();
    }

    public static main.java.CudaCompute.CudaCompute.CudaComputeResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CudaComputeResponse>
        PARSER = new com.google.protobuf.AbstractParser<CudaComputeResponse>() {
      @java.lang.Override
      public CudaComputeResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CudaComputeResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CudaComputeResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public main.java.CudaCompute.CudaCompute.CudaComputeResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cuda_compute_CudaComputeRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cuda_compute_CudaComputeRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cuda_compute_CudaComputeResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_cuda_compute_CudaComputeResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022cuda_compute.proto\022\014cuda_compute\"8\n\022Cu" +
      "daComputeRequest\022\024\n\014texture_data\030\001 \003(\r\022\014" +
      "\n\004data\030\002 \003(\r\"9\n\023CudaComputeResponse\022\024\n\014t" +
      "exture_data\030\001 \003(\r\022\014\n\004data\030\002 \003(\r2h\n\022CudaC" +
      "omputeService\022R\n\013CudaCompute\022 .cuda_comp" +
      "ute.CudaComputeRequest\032!.cuda_compute.Cu" +
      "daComputeResponseB\027\n\025main.java.CudaCompu" +
      "teb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_cuda_compute_CudaComputeRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cuda_compute_CudaComputeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cuda_compute_CudaComputeRequest_descriptor,
        new java.lang.String[] { "TextureData", "Data", });
    internal_static_cuda_compute_CudaComputeResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cuda_compute_CudaComputeResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_cuda_compute_CudaComputeResponse_descriptor,
        new java.lang.String[] { "TextureData", "Data", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
